/**
 * For Loop
 */

const listOfStudents = [
  { first: 'Mary', last: 'Hart', gender: 'female', age: 24 },
  { first: 'Drew', last: 'Wyckoff', gender: 'male', age: 33 },
  { first: 'Andrew', last: 'Green', gender: 'male', age: 13 },
  { first: 'Cameron', last: 'Bolus', gender: 'female', age: 41 },
  { first: 'Peggy', last: 'Wood', gender: 'female', age: 8 },
  { first: 'Graham', last: 'Jones', gender: 'male', age: 40 },
  { first: 'Elliot', last: 'Corn', gender: 'male', age: 19},
  { first: 'Jane', last: 'Gooden', gender: 'female', age: 55},
  { first: 'Satoshi', last: 'Abe', gender: 'male', age: 73 },
  { first: 'Atushi', last: 'Eto', gender: 'male', age: 25 },
  { first: 'Lin', last: 'Ying', gender: 'female', age: 35 },
];

let justNamesFromStudents = [];

for (let i = 0; i < listOfStudents.length; i++) {
  justNamesFromStudents.push(listOfStudents[i].first);
}

console.log(justNamesFromStudents); // Array ["Mary", "Drew", "Andrew", "Cameron" ...]

/**
 * Map
 */

function extractJustNames(element) {
  return element.first
}

const namesFromListUsingMap = listOfStudents.map(extractJustNames);
// (11) ["Mary", "Drew", "Andrew", "Cameron", "Peggy", "Graham", "Elliot", "Jane", "Satoshi", "Atushi", "Lin"]


/**
 * Filter
 */

// Using for loop

// Students younger than 20s
const studentsYoungerThan20sUsingForLoop = [];

for (let i = 0; i < listOfStudents.length; i++) {
  if (listOfStudents[i].age < 20) {
    studentsYoungerThan20sUsingForLoop.push(listOfStudents[i]);
  }
}

console.log(studentsYoungerThan20sUsingForLoop) // (3) [{…}, {…}, {…}]

// Using .filter
function extractStudentsYoungerThan20sUsingFilter(element) {
  return element.age < 20;
}

const studentsYoungerThan20sUsingFilter = listOfStudents.filter(extractStudentsYoungerThan20sUsingFilter);
console.log(studentsYoungerThan20sUsingFilter); // (3) [{…}, {…}, {…}]

// Using for loop to filter males.

const justMalesUsingForLoop = [];

for (let i = 0; i < listOfStudents.length; i++) {
  if (listOfStudents[i].gender === 'male') {
    justMalesUsingForLoop.push(listOfStudents[i]);
  }
}

console.log(justMalesUsingForLoop);

// printed in console
// (6) [{…}, {…}, {…}, {…}, {…}, {…}]
// 0: {first: "Drew", last: "Wyckoff", gender: "male", age: 33}
// 1: {first: "Andrew", last: "Green", gender: "male", age: 13}
// 2: {first: "Graham", last: "Jones", gender: "male", age: 40}
// 3: {first: "Elliot", last: "Corn", gender: "male", age: 19}
// 4: {first: "Satoshi", last: "Abe", gender: "male", age: 73}
// 5: {first: "Atushi", last: "Eto", gender: "male", age: 25}

// Filter
function justMalesUsingFilterCallback (element) {
  return element.gender === 'male';
}

const justMalesUsingFilter = listOfStudents.filter(justMalesUsingFilterCallback);
console.log(justMalesUsingFilter); // (6) [{…}, {…}, {…}, {…}, {…}, {…}]


// Using for loop to filter females and older than 35
const femalesOlderThan35s = [];

for (let i = 0; i < listOfStudents.length; i++) {
  if (listOfStudents[i].gender === 'female' && listOfStudents[i].age > 35 ) {
    femalesOlderThan35s.push(listOfStudents[i]);
  }
}

console.log(femalesOlderThan35s);

// Using .filter to extract females and older than 35
function extractFemales(element) {
  return element.gender === 'female';
}

function extractOlderThan35s(element) {
  return element.age > 35;
}

const femalesOlderThan35sUsingTwoFilters = listOfStudents
  .filter(extractFemales) // (6)
	.filter(extractOlderThan35s); // (2)

console.log(femalesOlderThan35sUsingTwoFilters); // (2) [{…}, {…}]

/**
 * Map and Filter
 */

const tasks = [
  {
    'name': 'Write for Envato Tuts+',
    'duration' : 120
  },
  {
    'name' : 'Work out',
    'duration' : 60
  },
  {
    'name'     : 'Procrastinate on Duolingo',
    'duration' : 240
  }];

function extractDurationFromTasks(element) {
  return element.duration; // (3) [120, 60, 240]
}

function extractBiggerThan100(element) {
  return element > 100; // (2) [120, 240]
}

const tasksBiggerThan100 = tasks
	.map(extractDurationFromTasks)
	.filter(extractBiggerThan100);

console.log(tasksBiggerThan100);


// Filter and Find do the same things. But Find returns the first coincidence.


